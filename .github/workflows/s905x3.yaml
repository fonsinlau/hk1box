name: make s905x3

on:
  # watch:
  #   types: started
  schedule:
    - cron: '0 2 5,15,25 * *'

env:
  REPO_URL: https://github.com/Lienol/openwrt
  REPO_BRANCH: "21.02"
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: s905x3/s905x3.config
  DIY_P1_SH: s905x3/s905x3_diy_before.sh
  DIY_P2_SH: s905x3/s905x3_diy_after.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai
  KERNEL_VERSION: 5.18.8

jobs:
  build_openwrt:
    name: Build Hk1Box OpenWrt
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox* google* dotnet* powershell* openjdk* mysql* php*
        sudo -E apt update -y
        sudo -E apt full-upgrade -y
        sudo -E apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"
        df -h

    - name: Clone source code
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "tag_name=$(date +%Y%m%d)" >> $GITHUB_ENV

    # - name: Ccache
    #   uses: klever1988/cachewrtbuild@main
    #   with:
    #     ccache: 'true'
    #     clean: 'false'
    #     prefix: ${{ github.workspace }}/openwrt

    - name: Diy before
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update or Install feeds
      run: |
        cd openwrt
        ./scripts/feeds clean
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Diy after
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin
        echo "::set-output name=status::success"

    - name: Package Armvirt as OpenWrt
      uses: ophub/flippy-openwrt-actions@main
      env:
        OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*.tar.gz
        PACKAGE_SOC: s905x3
        KERNEL_VERSION_NAME: ${{ env.KERNEL_VERSION }}
        WHOAMI: Hk1Box

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages openwrt-armvirt-64-default.manifest openwrt-armvirt-64-Image sha256sums version.buildinfo feeds.buildinfo
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    # - name: Upload firmware directory
    #   uses: actions/upload-artifact@v3
    #   if: steps.organize.outputs.status == 'success' && !cancelled()
    #   with:
    #     name: OpenWrt_firmware
    #     path: ${{ env.PACKAGED_OUTPUTPATH }}

    - name: Create release
      uses: ncipollo/release-action@main
      with:
        tag: openwrt_hk1box_Lienol
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        token: ${{ secrets.GH_TOKEN }}
        body: |
          This is OpenWrt firmware for Hk1Box tv box
          * Firmware information
          Default IP: 10.0.6.1
          Default username: root
          Default password: password
          Default WIFI name: OpenWrt
          Default WIFI password: none
          Install to EMMC: Login to OpenWrt → System → Amlogic Service → Install OpenWrt

    # - name: Remove old Releases
    #   uses: dev-drprasad/delete-older-releases@v0.1.0
    #   with:
    #     keep_latest: 3
    #     delete_tags: true
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Delete older releases
      uses: dev-drprasad/delete-older-releases@master
      with:
        keep_latest: 3
        delete_tags: true
        delete_tag_pattern: _
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Delete older workflow runs and artifacts
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ secrets.GH_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 1
        keep_minimum_runs: 0
